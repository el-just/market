server {
  listen      80;
  listen [::]:80;
  server_name veggies.market www.veggies.market;

  location / {
    rewrite ^ https://$host$request_uri? permanent;
  }

  #for certbot challenges (renewal process)
  location ~ /.well-known/acme-challenge {
      allow all;
      root /dist;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name veggies.market www.veggies.market;

  server_tokens off;

  ssl_certificate /etc/letsencrypt/live/veggies.market/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/veggies.market/privkey.pem;

  ssl_buffer_size 8k;

  ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

  ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
  ssl_prefer_server_ciphers on;

  ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

  ssl_ecdh_curve secp384r1;
  ssl_session_tickets off;

  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8;

  location / {
    root /dist;
    try_files $uri $uri/ @prerender;
  }

  location @prerender {
    proxy_set_header X-Prerender-Token wzKw99ZK23UKBh4QZ9zW;
    set $prerender 0;

    if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp") {
        set $prerender 1;
    }
    if ($args ~ "_escaped_fragment_") {
        set $prerender 1;
    }
    if ($http_user_agent ~ "Prerender") {
        set $prerender 0;
    }
    if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
        set $prerender 0;
    }

    if ($prerender = 1) {
        #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
        set $prerender "service.prerender.io";
        rewrite .* /$scheme://$host$request_uri? break;
        proxy_pass https://$prerender;
    }

    if ($prerender = 0) {
            rewrite .* /index.html break;
        }
  }

  location /api {
    proxy_pass http://backend:6543/api;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
  }

#  location /ws {
#    proxy_pass http://backend:6543/ws;
#  }

#error_page  404              /404.html;
# redirect server error pages to the static page /50x.html
#
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}
